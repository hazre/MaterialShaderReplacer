name: Build Release

on: 
  workflow_dispatch:

env:
  packageName: "dev.hazre.materialshaderreplacer"

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup PNPM
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Configure Git User
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create Release PR or Version Files
        id: changesets
        run: pnpm changeset version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get New Version from Root package.json
        id: root_version
        uses: notiz-dev/github-action-json-property@v0.2.0
        with:
            path: "package.json"
            prop_path: "version"

      - name: Update Unity package.json Version
        env:
          NEW_VERSION: ${{ steps.root_version.outputs.prop }}
          UNITY_PKG_PATH: "Packages/${{env.packageName}}/package.json"
        run: node scripts/update-unity-package-version.js

      - name: Commit Changeset Files
        run: |
          git add .changeset/ package.json pnpm-lock.yaml CHANGELOG.md Packages/${{env.packageName}}/package.json
          # Check if there are changes to commit to avoid error
          if ! git diff --staged --quiet; then
            git commit -m "chore: version packages"
            git push
          else
            echo "No version changes to commit."
          fi

      - name: Update Unity package.json changelogUrl
        env:
          NEW_VERSION: ${{ steps.root_version.outputs.prop }}
          UNITY_PKG_PATH: "Packages/${{env.packageName}}/package.json"
        run: node scripts/update-unity-package-changelog-url.js

      - name: Set Environment Variables
        run: |
          echo "zipFile=${{ env.packageName }}-${{ steps.root_version.outputs.prop }}".zip >> $GITHUB_ENV
          echo "unityPackage=${{ env.packageName }}-${{ steps.root_version.outputs.prop }}.unitypackage" >> $GITHUB_ENV
        
      - name: Create Zip
        uses: thedoctor0/zip-release@0.7.6
        with:
          type: "zip"
          directory: "Packages/${{env.packageName}}/"
          filename: "../../${{env.zipFile}}" # make the zip file two directories up, since we start two directories in above
          
      - run: find "Packages/${{env.packageName}}/" -name \*.meta >> metaList
          
      - name: Create UnityPackage
        uses: pCYSl5EDgo/create-unitypackage@b5c57408698b1fab8b3a84d4b67f767b8b7c0be9
        with:
          package-path: ${{ env.unityPackage }}
          include-files: metaList

      - name: Extract Release Notes
        id: release_notes
        run: echo "body<<EOF" >> $GITHUB_OUTPUT && node scripts/extract-release-notes.js >> $GITHUB_OUTPUT && echo "EOF" >> $GITHUB_OUTPUT
        
      - name: Make Release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          tag_name: ${{ steps.root_version.outputs.prop }}
          body: ${{ steps.release_notes.outputs.body }}
          files: |
            ${{ env.zipFile }}
            ${{ env.unityPackage }}
            Packages/${{ env.packageName }}/package.json